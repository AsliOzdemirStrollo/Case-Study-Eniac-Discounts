# -*- coding: utf-8 -*-
"""Project_discount_categories.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DcOanRC1oeprjO0WNaJPkQ_SVrCBH32b

# Import Pandas & CSVs - Create Copies
"""

import pandas as pd

products = 'https://drive.google.com/file/d/1_56ouLZVXT4oQaDR45ww6sUDcjdf3Cj6/view?usp=drive_link'

def import_csv(url):
    path = "https://drive.google.com/uc?export=download&id="+url.split("/")[-2]
    return pd.read_csv(path)

products_cl = import_csv(products)

products_cl_copy = products_cl.copy()

"""# Explore Products Table"""

products_cl.info()

products_cl["type"].sample(10)

products_cl["type"].value_counts()

"""# Product Categories

## Create category columns
"""

products_cl_copy["main_category"]=""
products_cl_copy["sub_category"]=""

"""## Check for 30 largest types"""

products_cl_copy["type"].value_counts().nlargest(30)

#products_cl_copy.loc[products_cl["type"]=="11865403"]
products_cl_copy.loc[products_cl_copy["name"].str.contains("second hand", case=False)]

"""## Create categories

### Created categories based on type
"""

# Function to create main- and sub-category
def create_type_category(type,m_category,s_category):
  for index, row in products_cl_copy.iterrows():
    if row["type"] == type:
        if m_category not in row["main_category"]:
          if row["main_category"] == "":
              products_cl_copy.loc[index, "main_category"] += m_category
          else:
              products_cl_copy.loc[index, "main_category"] += ", " + m_category
        if s_category not in row["sub_category"]:
            if row["sub_category"] == "":
              products_cl_copy.loc[index, "sub_category"] += s_category
            else:
              products_cl_copy.loc[index, "sub_category"] += ", " + s_category

create_type_category("11865403","case","iphone_case")
create_type_category("12175397","server","server")
create_type_category("11935397","storage","external_storage")
create_type_category("1298","","open")
create_type_category("11905404","wireless","wirless_device")
create_type_category("1282","workstation","workstation")
create_type_category("12635403","case","ipad_case")
create_type_category("13835403","case","macbook_case")
create_type_category("5,74E+15","workstation","imac")
create_type_category("1364","pc_components","memory")
create_type_category("12585395","peripherie","usb_devices")
create_type_category("1296","monitor","monitor")
create_type_category("1325","cable","cable")
create_type_category("5384","peripherie","headphones")
create_type_category("1433","storage","ssd_expansion_kit")
create_type_category("12215397","storage","ssd_storage")
create_type_category("5398","peripherie","speaker")
create_type_category("1,02E+12","workstation","macbook_pro")
create_type_category("57445397","storage","portable_storage")
create_type_category("1,44E+11","repair","repair")
create_type_category("1334","peripherie","network_devices")
create_type_category("2449","smartphone","wearables")
create_type_category("2158","workstation","macbook_pro")
create_type_category("12655397","storage","internal_storage")
create_type_category("1229","peripherie","pen")
create_type_category("12995397","peripherie","pc_expansion")
create_type_category("1515","peripherie","battery")
create_type_category("13615399","peripherie","charger")
create_type_category("13555403","smartphone","screen_protector")
create_type_category("1405","tablet","graphics_tablet")

print(products_cl_copy["main_category"].value_counts())
print(products_cl_copy["sub_category"].value_counts())

"""### Created categories based on words"""

import re

# check for smartphones
for index, row in products_cl_copy.iterrows():
    if (re.search(r"^.{0,7}apple iphone", row["name"], re.IGNORECASE) and (row["price"] > 200)):
        if "smartphone" not in row["main_category"]:
          if row["main_category"] == "":
              products_cl_copy.loc[index, "main_category"] += "smartphone"
        if "smartphone" not in row["sub_category"]:
          if row["sub_category"] == "":
              products_cl_copy.loc[index, "sub_category"] += "smartphone"
          else:
              products_cl_copy.loc[index, "sub_category"] += ", smartphone"

# check for open products
for index, row in products_cl_copy.iterrows():
    if (re.search(r"Open -", row["name"], re.IGNORECASE)
        or re.search(r"Like new -", row["name"], re.IGNORECASE)
        or re.search(r"second hand", row["name"], re.IGNORECASE)
        or re.search(r"reconditioned", row["desc"], re.IGNORECASE)
        or re.search(r"refurbished", row["desc"], re.IGNORECASE)
        or re.search(r"without box", row["desc"], re.IGNORECASE)):
            categories = row["sub_category"].split(", ")  # Split the category string into a list
            if "open" not in categories:  # Check if "open" is already in the list
                if row["sub_category"] == "":
                    products_cl_copy.loc[index, "sub_category"] = "open"
                else:
                    products_cl_copy.loc[index, "sub_category"] += ", open"

# check for battery
for index, row in products_cl_copy.iterrows():
    if (re.search(r"battery", row["desc"], re.IGNORECASE)):
        if "peripherie" not in row["main_category"]:
          if row["main_category"] == "":
              products_cl_copy.loc[index, "main_category"] += "peripherie"
        if "battery" not in row["sub_category"]:
          if row["sub_category"] == "":
              products_cl_copy.loc[index, "sub_category"] += "battery"
          else:
              products_cl_copy.loc[index, "sub_category"] += ", battery"

# check for ipad
for index, row in products_cl_copy.iterrows():
    if (re.search(r"ipad", row["desc"], re.IGNORECASE)) and (row["price"] > 300):
        if "tablet" not in row["main_category"]:
          if row["main_category"] == "":
              products_cl_copy.loc[index, "main_category"] += "tablet"
        if "ipad" not in row["sub_category"]:
          if row["sub_category"] == "":
              products_cl_copy.loc[index, "sub_category"] += "ipad"
          else:
              products_cl_copy.loc[index, "sub_category"] += ", ipad"

#check for keyboard and mouse
# check for open products
for index, row in products_cl_copy.iterrows():
    if (re.search(r"keyboard", row["name"], re.IGNORECASE)
        or re.search(r"mouse", row["name"], re.IGNORECASE)
        or re.search(r"keyboard", row["desc"], re.IGNORECASE)
        or re.search(r"mouse", row["desc"], re.IGNORECASE)):
            categories = row["main_category"].split(", ")  # Split the category string into a list
            if "peripherie" not in categories:  # Check if "peripherie" is already in the list
                if row["main_category"] == "":
                    products_cl_copy.loc[index, "main_category"] = "peripherie"
            categories = row["sub_category"].split(", ")  # Split the category string into a list
            if "input_devices" not in categories:  # Check if "input_devices" is already in the list
                if row["sub_category"] == "":
                    products_cl_copy.loc[index, "sub_category"] = "input_devices"
                else:
                    products_cl_copy.loc[index, "sub_category"] += ", input_devices"

print(products_cl_copy["main_category"].value_counts())
print(products_cl_copy["sub_category"].value_counts().head(35))

#set the rest of products to other
for index, row in products_cl_copy.iterrows():
          if row["main_category"] == "":
              products_cl_copy.loc[index, "main_category"] += "other"
          if row["sub_category"] == "":
              products_cl_copy.loc[index, "sub_category"] += "other"
          if row["sub_category"] == "open":
              products_cl_copy.loc[index, "sub_category"] += ", other"

print(products_cl_copy["main_category"].value_counts())
print(products_cl_copy["sub_category"].value_counts().head(35))

"""## Save Products Table"""

#from google.colab import files

#products_cl_copy.to_csv("products_qu.csv", index=False)
#files.download("products_qu.csv")